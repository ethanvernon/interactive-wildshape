{"version":3,"sources":["logo.svg","Child.js","Sibling.js","StrInput.js","Parent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Child","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","inherits","createClass","key","value","e","form","target","newStrength","checkStrength","onChange","react_default","a","createElement","id","selected","Component","Sibling","apply","arguments","strength","StrInput","handleStrChange","console","log","changeStr","parseInt","type","min","max","defaultValue","onInput","Parent","state","changeForm","changeStrState","newForm","setState","newSize","str","document","getElementById","newStr","StrInput_StrInput","Child_Child","Sibling_Sibling","App","className","Parent_Parent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc77fc81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './App.css';\n\nexport class Child extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const form = e.target.value;\n    const newStrength = this.props.checkStrength(form);\n    this.props.onChange(form, newStrength);\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n        <span>Size: </span>\n        <select\n          id=\"forms\"\n          onChange = {this.handleChange}>\n          <option value =\"Dimunitive\">Dimunitive</option>\n          <option value =\"Tiny\">Tiny</option>\n          <option value =\"Small\">Small</option>\n          <option value =\"Medium\" selected>Medium</option>\n          <option value =\"Large\">Large</option>\n          <option value =\"Huge\">Huge</option>\n        </select>\n        \n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nexport class Sibling extends Component {\n\n  render() {\n\n    const form = this.props.form;\n    const strength = this.props.strength;\n    \n    return (\n      <div>\n        <h1>You've selected: {form}</h1>\n        <h2>You're strength is now {strength}</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nexport class StrInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStrChange = this.handleStrChange.bind(this);\n  }\n\n  handleStrChange(e) {\n  \tconsole.log(e.target.value);\n    const newStrength = this.props.changeStr(parseInt(e.target.value));\n    console.log(\"changeStr changed to \"+ newStrength);\n    this.props.onChange(newStrength);\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n        <span>Strength: </span>\n        <input \n        \tid=\"score\" \n        \ttype=\"number\" \n        \tmin=\"6\" \n        \tmax=\"22\" \n        \tdefaultValue={this.props.strength} \n        \tonInput = {this.handleStrChange}/>        \n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Child } from './Child';\nimport { Sibling } from './Sibling';\nimport { StrInput } from './StrInput';\n\nexport class Parent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {form: 'Medium', strength: 18};\n    this.changeForm = this.changeForm.bind(this);\n    this.checkStrength = this.checkStrength.bind(this);\n    this.changeStrState = this.changeStrState.bind(this);\n    this.changeStr = this.changeStr.bind(this);\n  }\n\n  changeForm(newForm, newStrength) {\n    this.setState({\n      form: newForm,\n      strength: newStrength\n    });\n  }\n\n  changeStrState(newStrength) {\n    this.setState({      \n      form: this.state.form,\n      strength: newStrength\n    });\n\n    console.log(\"Strength is \" + this.state.strength);\n  }\n\n  checkStrength(newSize) {\n    console.log(\"checkStrength was called\");\n    console.log(\"form is: \" + newSize);\n\n    const str = parseInt(document.getElementById('score').value);\n\n    switch (newSize) {\n      case 'Dimunitive': \n        return str-4;\n        break;        \n      case 'Tiny':\n        return str-2;\n        break;\n      case 'Small':\n        return str;\n        break;\n      case 'Medium':\n        return str;\n        break;\n      case 'Large':\n        return str+4;\n        break;\n      case 'Huge':\n        return str+6;\n        break;\n    }\n  }\n\n  changeStr(newStr) {\n    const size = this.state.form;\n\n    switch (size) {\n      case 'Dimunitive': \n        return newStr-4;\n        break;        \n      case 'Tiny':\n        return newStr-2;\n        break;\n      case 'Small':\n        return newStr;\n        break;\n      case 'Medium':\n        return newStr;\n        break;\n      case 'Large':\n        return newStr+4;\n        break;\n      case 'Huge':\n        return newStr+6;\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <StrInput \n          onChange = {this.changeStrState}\n          changeStr = {this.changeStr}\n          strength = {this.state.strength} />\n        <Child\n          onChange = {this.changeForm}\n          checkStrength = {this.checkStrength}/>\n        <Sibling \n          form = {this.state.form} \n          strength ={this.state.strength}/>\n      </div>\n      );\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Parent } from './Parent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          < Parent />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}