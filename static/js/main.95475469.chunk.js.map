{"version":3,"sources":["logo.svg","Child.js","Sibling.js","StrInput.js","DexInput.js","BabInput.js","Parent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Child","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","inherits","createClass","key","value","e","form","target","newStrength","checkStrength","newDex","checkDex","sizeModAA","checkSizeMod","sizeModCMBD","newMAB","checkMab","onChange","react_default","a","createElement","id","selected","Component","Sibling","apply","arguments","strength","modStrength","dexterity","modDex","modAA","modCMBD","modMab","secondaryMab","parseInt","StrInput","handleStrChange","changeStr","type","min","max","defaultValue","onInput","DexInput","handleDexChange","changeDex","dex","BabInput","handleBabChange","changeBab","bab","Parent","state","modMAB","changeForm","changeStrState","changeDexState","checkMabOnBabChange","checkMabOnSizeChange","changeBabState","newForm","newSizeModAA","newSizeModCMBD","setState","mod","Math","floor","console","log","newBab","argument","str","size","modStr","BabInput_BabInput","StrInput_StrInput","DexInput_DexInput","Child_Child","Sibling_Sibling","App","className","Parent_Parent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4KCG3BC,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFHA,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAAJ,EAAAC,GAAAG,OAAAU,EAAA,EAAAV,CAAAJ,EAAA,EAAAe,IAAA,eAAAC,MAAA,SAMeC,GACX,IAAMC,EAAOD,EAAEE,OAAOH,MAChBI,EAAcd,KAAKJ,MAAMmB,cAAcH,GACvCI,EAAShB,KAAKJ,MAAMqB,SAASL,GAC7BM,EAAYlB,KAAKJ,MAAMuB,aAAaP,GACpCQ,GAA+C,EAAjCpB,KAAKJ,MAAMuB,aAAaP,GACtCS,EAASrB,KAAKJ,MAAM0B,SAASJ,EAAWJ,GAC9Cd,KAAKJ,MAAM2B,SAASX,EAAME,EAAaE,EAAQE,EAAWE,EAAaC,KAb3E,CAAAZ,IAAA,SAAAC,MAAA,WAoBI,OACEc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACEC,GAAG,QACHJ,SAAYvB,KAAKI,cACjBoB,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,cAAf,cACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,QAAf,QACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,SAAf,SACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,SAASkB,UAAQ,GAAhC,UACAJ,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,SAAf,SACAc,EAAAC,EAAAC,cAAA,UAAQhB,MAAO,QAAf,cA/BVhB,EAAA,CAA2BmC,aCAdC,EAAb,SAAAnC,GAAA,SAAAmC,IAAA,OAAAhC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,GAAAhC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAAC,MAAA/B,KAAAgC,YAAA,OAAAlC,OAAAS,EAAA,EAAAT,CAAAgC,EAAAnC,GAAAG,OAAAU,EAAA,EAAAV,CAAAgC,EAAA,EAAArB,IAAA,SAAAC,MAAA,WAII,IAAME,EAAOZ,KAAKJ,MAAMgB,KAClBqB,EAAWjC,KAAKJ,MAAMsC,YACtBC,EAAYnC,KAAKJ,MAAMwC,OACvBC,EAAQrC,KAAKJ,MAAMyC,MACnBC,EAAUtC,KAAKJ,MAAM0C,QACrBC,EAASvC,KAAKJ,MAAM2C,OACpBC,EAAeC,SAASzC,KAAKJ,MAAM2C,QAAQ,EAEjD,OACEf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BAAsBd,GACtBY,EAAAC,EAAAC,cAAA,iCAAyBO,GACzBT,EAAAC,EAAAC,cAAA,kCAA0BS,GAC1BX,EAAAC,EAAAC,cAAA,mDAA2CW,GAC3Cb,EAAAC,EAAAC,cAAA,iDAAyCY,GACzCd,EAAAC,EAAAC,cAAA,0DAAkDa,GAClDf,EAAAC,EAAAC,cAAA,4DAAoDc,QApB5DV,EAAA,CAA6BD,aCAhBa,EAAb,SAAA/C,GACE,SAAA+C,EAAY9C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,IACjB7C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4C,GAAAvC,KAAAH,KAAMJ,KACD+C,gBAAkB9C,EAAK8C,gBAAgBtC,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFNA,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAA4C,EAAA/C,GAAAG,OAAAU,EAAA,EAAAV,CAAA4C,EAAA,EAAAjC,IAAA,kBAAAC,MAAA,SAMkBC,GAMdX,KAAKJ,MAAM2B,SAASkB,SAAS9B,EAAEE,OAAOH,OAAQV,KAAKJ,MAAMgD,UAAUH,SAAS9B,EAAEE,OAAOH,WAZzF,CAAAD,IAAA,SAAAC,MAAA,WAmBI,OACEc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SACCC,GAAG,QACHkB,KAAK,SACLC,IAAI,IACJC,IAAI,KACJC,aAAchD,KAAKJ,MAAMqC,SACzBgB,QAAWjD,KAAK2C,uBA5BzBD,EAAA,CAA8Bb,aCAjBqB,EAAb,SAAAvD,GACE,SAAAuD,EAAYtD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACjBrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KACDuD,gBAAkBtD,EAAKsD,gBAAgB9C,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFNA,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAAoD,EAAAvD,GAAAG,OAAAU,EAAA,EAAAV,CAAAoD,EAAA,EAAAzC,IAAA,kBAAAC,MAAA,SAMkBC,GAMdX,KAAKJ,MAAM2B,SAASkB,SAAS9B,EAAEE,OAAOH,OAAQV,KAAKJ,MAAMwD,UAAUX,SAAS9B,EAAEE,OAAOH,WAZzF,CAAAD,IAAA,SAAAC,MAAA,WAmBI,OACEc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACCC,GAAG,WACHkB,KAAK,SACLC,IAAI,IACJC,IAAI,KACJC,aAAchD,KAAKJ,MAAMyD,IACzBJ,QAAWjD,KAAKmD,uBA5BzBD,EAAA,CAA8BrB,aCAjByB,EAAb,SAAA3D,GACE,SAAA2D,EAAY1D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACjBzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KACD2D,gBAAkB1D,EAAK0D,gBAAgBlD,KAArBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFNA,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAAwD,EAAA3D,GAAAG,OAAAU,EAAA,EAAAV,CAAAwD,EAAA,EAAA7C,IAAA,kBAAAC,MAAA,SAMkBC,GAMdX,KAAKJ,MAAM2B,SAASkB,SAAS9B,EAAEE,OAAOH,OAAQV,KAAKJ,MAAM4D,UAAUf,SAAS9B,EAAEE,OAAOH,WAZzF,CAAAD,IAAA,SAAAC,MAAA,WAmBI,OACEc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,SACCC,GAAG,WACHkB,KAAK,SACLC,IAAI,IACJC,IAAI,KACJC,aAAchD,KAAKJ,MAAM6D,IACzBR,QAAWjD,KAAKuD,uBA5BzBD,EAAA,CAA8BzB,aCKjB6B,EAAb,SAAA/D,GACE,SAAA+D,EAAY9D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0D,IACjB7D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4D,GAAAvD,KAAAH,KAAMJ,KACD+D,MAAQ,CAAC/C,KAAM,SAAUqB,SAAU,GAAIoB,IAAK,GAAInB,YAAa,GAAIE,OAAQ,GAAIC,MAAO,EAAGC,QAAS,EAAGmB,IAAK,EAAGG,OAAQ,IACxH/D,EAAKgE,WAAahE,EAAKgE,WAAWxD,KAAhBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAClBA,EAAKkB,cAAgBlB,EAAKkB,cAAcV,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKiE,eAAiBjE,EAAKiE,eAAezD,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKoB,SAAWpB,EAAKoB,SAASZ,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKkE,eAAiBlE,EAAKkE,eAAe1D,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACtBA,EAAKsB,aAAetB,EAAKsB,aAAad,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKmE,oBAAsBnE,EAAKmE,oBAAoB3D,KAAzBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC3BA,EAAKoE,qBAAuBpE,EAAKoE,qBAAqB5D,KAA1BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC5BA,EAAKqE,eAAiBrE,EAAKqE,eAAe7D,KAApBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAXLA,EADrB,OAAAC,OAAAS,EAAA,EAAAT,CAAA4D,EAAA/D,GAAAG,OAAAU,EAAA,EAAAV,CAAA4D,EAAA,EAAAjD,IAAA,aAAAC,MAAA,SAkBayD,EAASrD,EAAaE,EAAQoD,EAAcC,EAAgBhD,GACrErB,KAAKsE,SAAS,CACZ1D,KAAMuD,EACNjC,YAAapB,EACbsB,OAAQpB,EACRqB,MAAO+B,EACP9B,QAAS+B,EACTT,OAAQvC,MAzBd,CAAAZ,IAAA,iBAAAC,MAAA,SAiCiBI,EAAayD,GAC1BvE,KAAKsE,SAAS,CACZrC,SAAUnB,EACVoB,YAAaqC,EACbX,OAAQ5D,KAAK2D,MAAMF,IAAMzD,KAAK2D,MAAMtB,MAAQmC,KAAKC,OAAOF,EAAI,IAAI,KAGlEG,QAAQC,IAAI,eAAiB3E,KAAK2D,MAAM1B,YAxC5C,CAAAxB,IAAA,iBAAAC,MAAA,SA8CiBM,EAAQuD,GACrBvE,KAAKsE,SAAS,CACZ1D,KAAMZ,KAAK2D,MAAM/C,KACjByC,IAAKrC,EACLoB,OAAQmC,IAGVG,QAAQC,IAAI,gBAAkB3E,KAAK2D,MAAMN,OArD7C,CAAA5C,IAAA,iBAAAC,MAAA,SA2DiBkE,EAAQL,GACrBvE,KAAKsE,SAAS,CACZ1D,KAAMZ,KAAK2D,MAAM/C,KACjB6C,IAAKmB,EACLhB,OAAQW,IAGVG,QAAQC,IAAI,kCAAoC3E,KAAK2D,MAAMC,UAlE/D,CAAAnD,IAAA,gBAAAC,MAAA,SAyEgBmE,GACZH,QAAQC,IAAI,4BACZD,QAAQC,IAAI,YAAcE,GAG1B,IAAIC,EAAM,KACNC,EAAO,KAYX,OAVuB,iBAAZF,GACTC,EAAM9E,KAAK2D,MAAM1B,SACjB8C,EAAOF,EACPH,QAAQC,IAAI,kBAEZG,EAAMD,EACNE,EAAO/E,KAAK2D,MAAM/C,KAClB8D,QAAQC,IAAI,qBAGNI,GACN,IAAK,aACH,OAAOD,EAAI,EAEb,IAAK,OACH,OAAOA,EAAI,EAEb,IAAK,QACH,OAAOA,EAET,IAAK,SACH,OAAOA,EAAI,EAEb,IAAK,QACH,OAAOA,EAAI,EAEb,IAAK,OACH,OAAOA,EAAI,EAEb,QACE,OAAOA,KA/Gf,CAAArE,IAAA,WAAAC,MAAA,SAuHWmE,GACPH,QAAQC,IAAI,uBACZD,QAAQC,IAAI,YAAcE,GAG1B,IAAIxB,EAAM,KACN0B,EAAO,KAYX,OAVuB,iBAAZF,GACTxB,EAAMrD,KAAK2D,MAAMN,IACjB0B,EAAOF,EACPH,QAAQC,IAAI,kBAEZtB,EAAMwB,EACNE,EAAO/E,KAAK2D,MAAM/C,KAClB8D,QAAQC,IAAI,gBAGNI,GACN,IAAK,aACH,OAAO1B,EAAI,EAEb,IAAK,OACH,OAAOA,EAAI,EAEb,IAAK,QACH,OAAOA,EAAI,EAEb,IAAK,SACH,OAAOA,EAET,IAAK,QACH,OAAOA,EAAI,EAEb,IAAK,OACH,OAAOA,EAAI,EAEb,QACE,OAAOA,KA7Jf,CAAA5C,IAAA,eAAAC,MAAA,SAqKeqE,GACX,OAAQA,GACN,IAAK,aACH,OAAO,EAET,IAAK,OACH,OAAO,EAET,IAAK,QACH,OAAO,EAET,IAAK,SACH,OAAO,EAET,IAAK,QACH,OAAQ,EAEV,IAAK,OACH,OAAQ,EAEV,QACE,OAAO,KA1Lf,CAAAtE,IAAA,sBAAAC,MAAA,SAiMsBmE,GAGlB,OAFAH,QAAQC,IAAI,kCACZD,QAAQC,IAAI,WAAaE,GAClBA,EAAS7E,KAAK2D,MAAMtB,MAAMmC,KAAKC,OAAOzE,KAAK2D,MAAMzB,YAAY,IAAI,KApM5E,CAAAzB,IAAA,uBAAAC,MAAA,SA0MuBmE,EAAUG,GAG7B,OAFAN,QAAQC,IAAI,mCACZD,QAAQC,IAAI,iCAAmCE,GACxCA,EAAS7E,KAAK2D,MAAMF,IAAIe,KAAKC,OAAOO,EAAO,IAAI,KA7M1D,CAAAvE,IAAA,SAAAC,MAAA,WAiNI,OACEc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuD,EAAD,CACE1D,SAAYvB,KAAKkE,eACjBV,UAAaxD,KAAKgE,oBAClBP,IAAOzD,KAAK2D,MAAMF,MACpBjC,EAAAC,EAAAC,cAACwD,EAAD,CACE3D,SAAYvB,KAAK8D,eACjBlB,UAAa5C,KAAKe,cAClBkB,SAAYjC,KAAK2D,MAAM1B,WACzBT,EAAAC,EAAAC,cAACyD,EAAD,CACE5D,SAAYvB,KAAK+D,eACjBX,UAAapD,KAAKiB,SAClBoC,IAAOrD,KAAK2D,MAAMN,MACpB7B,EAAAC,EAAAC,cAAC0D,EAAD,CACE7D,SAAYvB,KAAK6D,WACjB9C,cAAiBf,KAAKe,cACtBE,SAAYjB,KAAKiB,SACjBE,aAAgBnB,KAAKmB,aACrBG,SAAYtB,KAAKiE,uBACnBzC,EAAAC,EAAAC,cAAC2D,EAAD,CACEzE,KAAQZ,KAAK2D,MAAM/C,KACnBsB,YAAclC,KAAK2D,MAAMzB,YACzBE,OAAUpC,KAAK2D,MAAMvB,OACrBC,MAASrC,KAAK2D,MAAMtB,MACpBC,QAAWtC,KAAK2D,MAAMrB,QACtBC,OAAUvC,KAAK2D,MAAMC,cA3O/BF,EAAA,CAA4B7B,aCSbyD,mLAVX,OACE9D,EAAAC,EAAAC,cAAA,OAAK6D,UAAU,OACb/D,EAAAC,EAAAC,cAAA,UAAQ6D,UAAU,cAChB/D,EAAAC,EAAAC,cAAE8D,EAAF,eALQ3D,aCOE4D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvE,EAAAC,EAAAC,cAACsE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.95475469.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './App.css';\n\nexport class Child extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const form = e.target.value;\n    const newStrength = this.props.checkStrength(form);\n    const newDex = this.props.checkDex(form);\n    const sizeModAA = this.props.checkSizeMod(form);\n    const sizeModCMBD = this.props.checkSizeMod(form) * -1;\n    const newMAB = this.props.checkMab(sizeModAA, newStrength);\n    this.props.onChange(form, newStrength, newDex, sizeModAA, sizeModCMBD, newMAB);\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n        <span>Size: </span>\n        <select\n          id=\"forms\"\n          onChange = {this.handleChange}>\n          <option value =\"Dimunitive\">Dimunitive</option>\n          <option value =\"Tiny\">Tiny</option>\n          <option value =\"Small\">Small</option>\n          <option value =\"Medium\" selected>Medium</option>\n          <option value =\"Large\">Large</option>\n          <option value =\"Huge\">Huge</option>\n        </select>\n        \n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nexport class Sibling extends Component {\n\n  render() {\n\n    const form = this.props.form;\n    const strength = this.props.modStrength;\n    const dexterity = this.props.modDex;\n    const modAA = this.props.modAA;\n    const modCMBD = this.props.modCMBD;    \n    const modMab = this.props.modMab;\n    const secondaryMab = parseInt(this.props.modMab)-5;\n    \n    return (\n      <div>\n        <h1>You've selected: {form}</h1>\n        <p>Your strength is now {strength}</p>        \n        <p>Your dexterity is now {dexterity}</p>        \n        <p>Your size modifier to attack and AC is {modAA}</p>\n        <p>Your size modifier to CMB and CMD is {modCMBD}</p>        \n        <p>Your melee attack bonus to primary attacks is {modMab}</p>\n        <p>Your melee attack bonus to secondary attacks is {secondaryMab}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nexport class StrInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleStrChange = this.handleStrChange.bind(this);\n  }\n\n  handleStrChange(e) {\n  \t/*console.log(e.target.value);\n    const newStrength = this.props.changeStr(parseInt(e.target.value));\n    console.log(\"changeStr changed to \"+ newStrength);\n    this.props.onChange(newStrength);*/\n\n    this.props.onChange(parseInt(e.target.value), this.props.changeStr(parseInt(e.target.value)));\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n        <span>Strength: </span>\n        <input \n        \tid=\"score\" \n        \ttype=\"number\" \n        \tmin=\"6\" \n        \tmax=\"22\" \n        \tdefaultValue={this.props.strength} \n        \tonInput = {this.handleStrChange}/>        \n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nexport class DexInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDexChange = this.handleDexChange.bind(this);\n  }\n\n  handleDexChange(e) {\n  \t/*console.log(e.target.value);\n    const newStrength = this.props.changeStr(parseInt(e.target.value));\n    console.log(\"changeStr changed to \"+ newStrength);\n    this.props.onChange(newStrength);*/\n\n    this.props.onChange(parseInt(e.target.value), this.props.changeDex(parseInt(e.target.value)));\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n        <span>Dexterity: </span>\n        <input \n        \tid=\"dexScore\"\n        \ttype=\"number\"\n        \tmin=\"6\"\n        \tmax=\"22\"\n        \tdefaultValue={this.props.dex} \n        \tonInput = {this.handleDexChange}/>        \n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nexport class BabInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleBabChange = this.handleBabChange.bind(this);\n  }\n\n  handleBabChange(e) {\n  \t/*console.log(e.target.value);\n    const newStrength = this.props.changeStr(parseInt(e.target.value));\n    console.log(\"changeStr changed to \"+ newStrength);\n    this.props.onChange(newStrength);*/\n\n    this.props.onChange(parseInt(e.target.value), this.props.changeBab(parseInt(e.target.value)));\n  }\n\n\n\n\n  render() {\n    return (\n      <div>\n        <span>Base attack bonus: </span>\n        <input \n        \tid=\"babScore\"\n        \ttype=\"number\"\n        \tmin=\"0\"\n        \tmax=\"20\"\n        \tdefaultValue={this.props.bab} \n        \tonInput = {this.handleBabChange}/>        \n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Child } from './Child';\nimport { Sibling } from './Sibling';\nimport { StrInput } from './StrInput';\nimport { DexInput } from './DexInput';\nimport { BabInput } from './BabInput';\n\nexport class Parent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {form: 'Medium', strength: 18, dex: 12, modStrength: 20, modDex: 12, modAA: 0, modCMBD: 0, bab: 7, modMAB: 12};\n    this.changeForm = this.changeForm.bind(this);\n    this.checkStrength = this.checkStrength.bind(this);\n    this.changeStrState = this.changeStrState.bind(this);\n    this.checkDex = this.checkDex.bind(this);\n    this.changeDexState = this.changeDexState.bind(this);\n    this.checkSizeMod = this.checkSizeMod.bind(this);\n    this.checkMabOnBabChange = this.checkMabOnBabChange.bind(this);\n    this.checkMabOnSizeChange = this.checkMabOnSizeChange.bind(this);\n    this.changeBabState = this.changeBabState.bind(this);\n  }\n\n\n  //passed to Child as prop\n  //updates this.state.modStrength, this.dexStrength, this.form whenever size changes\n  changeForm(newForm, newStrength, newDex, newSizeModAA, newSizeModCMBD, newMAB) {\n    this.setState({\n      form: newForm,\n      modStrength: newStrength,\n      modDex: newDex,\n      modAA: newSizeModAA,\n      modCMBD: newSizeModCMBD,\n      modMAB: newMAB\n    });\n  }\n\n\n  //passed to StrInput as prop\n  //reflects any changes to the character strength\n  //recevies 2 arguments from StrInput.js, new strength and modified strength\n  changeStrState(newStrength, mod) {\n    this.setState({      \n      strength: newStrength,\n      modStrength: mod,\n      modMAB: this.state.bab + this.state.modAA + Math.floor((mod-10)/2)\n    });\n\n    console.log(\"Strength is \" + this.state.strength);\n  }\n\n  //passed to DexInput as prop\n  //reflects any changes to the character dex\n  //recevies 2 arguments from DexInput.js, new dex and modified dex\n  changeDexState(newDex, mod) {\n    this.setState({      \n      form: this.state.form,\n      dex: newDex,\n      modDex: mod\n    });\n\n    console.log(\"Dexterity is \" + this.state.dex);\n  }\n\n  //passed to BabInput as prop\n  //reflects any changes to the character bab\n  //recevies 2 arguments from BabInput.js, new bab and modified bab\n  changeBabState(newBab, mod) {\n    this.setState({      \n      form: this.state.form,\n      bab: newBab,\n      modMAB: mod\n    });\n\n    console.log(\"modified melee attack bonus is \" + this.state.modMAB);\n  }\n\n\n  //passed to and gets called by Child and strInput (prop)\n  //checks argument typeof via conditional statement\n  //calculates new modified strength score whenever size or strength changs\n  checkStrength(argument) {\n    console.log(\"checkStrength was called\");\n    console.log(\"form is: \" + argument);\n    //console.log(typeof newSize == 'string');\n    \n    var str = null;\n    var size = null;\n    \n    if (typeof argument == 'string') {\n      str = this.state.strength;\n      size = argument;\n      console.log(\"size changed\");\n    } else {\n      str = argument;\n      size = this.state.form;\n      console.log(\"strength changed\");\n    }\n\n    switch (size) {\n      case 'Dimunitive': \n        return str-4;\n        break;        \n      case 'Tiny':\n        return str-2;\n        break;\n      case 'Small':\n        return str;\n        break;\n      case 'Medium':\n        return str+2;\n        break;\n      case 'Large':\n        return str+4;\n        break;\n      case 'Huge':\n        return str+6;\n        break;\n      default:\n        return str;\n        break;\n    }\n  }\n\n  //passed to and gets called by Child and dexInput (prop)\n  //checks argument typeof via conditional statement\n  //calculates new modified dex score whenever size or dex changes\n  checkDex(argument) {\n    console.log(\"checkDex was called\");\n    console.log(\"form is: \" + argument);\n    //console.log(typeof newSize == 'string');\n    \n    var dex = null;\n    var size = null;\n    \n    if (typeof argument == 'string') {\n      dex = this.state.dex;\n      size = argument;\n      console.log(\"size changed\");\n    } else {\n      dex = argument;\n      size = this.state.form;\n      console.log(\"dex changed\");\n    }\n\n    switch (size) {\n      case 'Dimunitive': \n        return dex+6;\n        break;        \n      case 'Tiny':\n        return dex+4;\n        break;\n      case 'Small':\n        return dex+2;\n        break;\n      case 'Medium':\n        return dex;\n        break;\n      case 'Large':\n        return dex-2;\n        break;\n      case 'Huge':\n        return dex-4;\n        break;\n      default:\n        return dex;\n        break;\n    }\n  }\n\n  //this is passed to Child.js as a prop\n  //it takes argument of size and returns the size modifier to AC and attack\n  //this is also called for modifier to CMB and CMD but the result is multiplied by negative 1\n  checkSizeMod(size) {\n    switch (size) {\n      case 'Dimunitive': \n        return 4;\n        break;        \n      case 'Tiny':\n        return 2;\n        break;\n      case 'Small':\n        return 1;\n        break;\n      case 'Medium':\n        return 0;\n        break;\n      case 'Large':\n        return -1;\n        break;\n      case 'Huge':\n        return -2;\n        break;\n      default:\n        return 0;\n        break;\n    }\n  }\n\n  //passed to and gets called by BabInput (prop)\n  //calculates new modified bab score whenever bab changes\n  checkMabOnBabChange(argument) {\n    console.log(\"checkMabOnBabChange was called\");\n    console.log(\"bab is: \" + argument);\n    return argument+this.state.modAA+Math.floor((this.state.modStrength-10)/2);\n  }\n\n  //passed to and gets called by Child (prop)\n  //calculates new modified bab score whenever size changes\n  //takes size modifier to attack and AC as argument and modified strength from size change\n  checkMabOnSizeChange(argument, modStr) {\n    console.log(\"checkMabOnSizeChange was called\");\n    console.log(\"modifier to attack and ac is: \" + argument);\n    return argument+this.state.bab+Math.floor((modStr-10)/2);\n  }\n\n  render() {\n    return (\n      <div>        \n        <BabInput \n          onChange = {this.changeBabState}\n          changeBab = {this.checkMabOnBabChange}\n          bab = {this.state.bab} />\n        <StrInput \n          onChange = {this.changeStrState}\n          changeStr = {this.checkStrength}\n          strength = {this.state.strength} />\n        <DexInput \n          onChange = {this.changeDexState}\n          changeDex = {this.checkDex}\n          dex = {this.state.dex} />\n        <Child\n          onChange = {this.changeForm}\n          checkStrength = {this.checkStrength}\n          checkDex = {this.checkDex}\n          checkSizeMod = {this.checkSizeMod}\n          checkMab = {this.checkMabOnSizeChange}/>\n        <Sibling \n          form = {this.state.form} \n          modStrength ={this.state.modStrength}\n          modDex = {this.state.modDex}\n          modAA = {this.state.modAA}\n          modCMBD = {this.state.modCMBD}          \n          modMab = {this.state.modMAB}/>\n      </div>\n      );\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Parent } from './Parent';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          < Parent />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}